1705598983
waR3U4bTeM%3Ad91b07291d9cf0e9dbe3bf524bb69f98-3dcd82583963360f3cdcfdb1fbb05c00
s:24012:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjNkY2Q4MjU4Mzk2MzM2MGYzY2RjZmRiMWZiYjA1YzAwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTA6InByb2ZpbC5waHAiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czoyODoiYXBwL1ZpZXdzL2xheW91dHMvcHJvZmlsLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6MTcxMDA6Ijw/cGhwIHJlcXVpcmVfb25jZSgkX1NFUlZFUlsnRE9DVU1FTlRfUk9PVCddIC4gJy9waHAvZnVuY3Rpb25zL3V0aWwucGhwJykgPz4NCjwhRE9DVFlQRSBodG1sPg0KPGh0bWwgbGFuZz0iZnIiPg0KDQo8aGVhZD4NCiAgICA8bWV0YSBjaGFyc2V0PSJVVEYtOCI+DQogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4NCiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCI+DQoNCiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vYm9vdHN0cmFwLWljb25zQDEuMTAuMi9mb250L2Jvb3RzdHJhcC1pY29ucy5jc3MiPg0KICAgIDxsaW5rIGhyZWY9Imh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vYm9vdHN0cmFwQDUuMC4yL2Rpc3QvY3NzL2Jvb3RzdHJhcC5taW4uY3NzIiByZWw9InN0eWxlc2hlZXQiIGludGVncml0eT0ic2hhMzg0LUVWU1RRTjMvYXpwckcxQW5tM1FEZ3BKTEltOU5hbzBZejF6dGNRVHdGc3BkM3lENjVWb2hocHV1Q09tTEFTakMiIGNyb3Nzb3JpZ2luPSJhbm9ueW1vdXMiPg0KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvZm9udC1hd2Vzb21lLzQuNy4wL2Nzcy9mb250LWF3ZXNvbWUubWluLmNzcyI+DQogICAgPGxpbmsgaHJlZj0iPD89IGJhc2VfdXJsKCkgLiAnL2Nzcy9zdHlsZS5jc3MnID8+IiByZWw9InN0eWxlc2hlZXQiPg0KICAgIDxsaW5rIGhyZWY9Ijw/PSBiYXNlX3VybCgpIC4gJy9jc3MvdGhlbWUuY3NzJyA/PiIgcmVsPSJzdHlsZXNoZWV0Ij4NCiAgICA8Pz0gJHRoaXMtPnJlbmRlclNlY3Rpb24oImhlYWRlciIpID8+DQogICAgPHRpdGxlPjw/PSAkdGl0bGU7ID8+PC90aXRsZT4NCjwvaGVhZD4NCg0KPGJvZHk+DQogICAgPGhlYWRlcj4NCiAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwgZmFkZSIgaWQ9Im1vZGFsZXhpdCIgdGFiaW5kZXg9Ii0xIiBhcmlhLWxhYmVsbGVkYnk9Im1vZGFsZXhpdCIgYXJpYS1oaWRkZW49InRydWUiPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtZGlhbG9nIj4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1jb250ZW50Ij4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtaGVhZGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxoNSBjbGFzcz0ibW9kYWwtdGl0bGUiIGlkPSJleGFtcGxlTW9kYWxMYWJlbCI+UXVpdHRlciBwcm9maWw8L2g1Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJidG4tY2xvc2UiIGRhdGEtYnMtZGlzbWlzcz0ibW9kYWwiIGFyaWEtbGFiZWw9IkNsb3NlIj48L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWJvZHkiPg0KICAgICAgICAgICAgICAgICAgICAgICAgRXRlcy12b3VzIHPDu3IgZGUgcXVpdHRlciBsYSBjb25uZXhpb24/DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1mb290ZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJidG4gYnRuLXNlY29uZGFyeSIgZGF0YS1icy1kaXNtaXNzPSJtb2RhbCI+Tm9uPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIG9uY2xpY2s9Im9uRXhpdCgpOyIgdHlwZT0iYnV0dG9uIiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5Ij5PdWk8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQogICAgICAgIDxuYXYgY2xhc3M9Im5hdmJhciBuYXZiYXItZXhwYW5kLWxnIDw/PSBnZXRUaGVtZSgkdXNlclsndHlwZSddLCJuYXYiKSA/PiI+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb250YWluZXItZmx1aWQiPg0KICAgICAgICAgICAgICAgIDxhIGlkPSJidG5faG9tZSIgY2xhc3M9Im5vc2VsZWN0IG5hdmJhci1icmFuZCI+PGltZyBjbGFzcz0ibm9zZWxlY3QgbG9nbyIgc3JjPSI8Pz0gYmFzZV91cmwoKSA/Pi9hc3NldHMvPD89IGdldExvZ29Db2xvcigkdXNlclsndHlwZSddKSA/PiI+IE1hIEZvcm1hdGlvbjwvYT4NCiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJuYXZiYXItdG9nZ2xlciIgdHlwZT0iYnV0dG9uIiBkYXRhLWJzLXRvZ2dsZT0iY29sbGFwc2UiIGRhdGEtYnMtdGFyZ2V0PSIjbmF2YmFyU3VwcG9ydGVkQ29udGVudCIgYXJpYS1jb250cm9scz0ibmF2YmFyU3VwcG9ydGVkQ29udGVudCIgYXJpYS1leHBhbmRlZD0iZmFsc2UiIGFyaWEtbGFiZWw9IlRvZ2dsZSBuYXZpZ2F0aW9uIj4NCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im5hdmJhci10b2dnbGVyLWljb24iPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICA8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICA8Zm9ybSBhY3Rpb249IiMiIGNsYXNzPSJkLWZsZXggc2VhcmNoIG1lLTQiPg0KICAgICAgICAgICAgICAgICAgICA8aW5wdXQgY2xhc3M9Im5vc2VsZWN0IGZvcm0tY29udHJvbCBtZS0yIiB0eXBlPSJzZWFyY2giIHBsYWNlaG9sZGVyPSJDaGVyY2hlciIgYXJpYS1sYWJlbD0iU2VhcmNoIj4NCiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ibm9zZWxlY3QgYnRuIDw/PSBnZXRUaGVtZSgkdXNlclsndHlwZSddLCJidXR0b24iKSA/PiIgdHlwZT0ic3VibWl0Ij5DaGVyY2hlcjwvYnV0dG9uPg0KICAgICAgICAgICAgICAgIDwvZm9ybT4NCg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbGxhcHNlIG5hdmJhci1jb2xsYXBzZSIgaWQ9Im5hdmJhclN1cHBvcnRlZENvbnRlbnQiPg0KICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9Im5vc2VsZWN0IG5hdmJhci1uYXYgbWUtYXV0byBtYi0yIG1iLWxnLTAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJuYXYtaXRlbSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaWQ9ImJ0bl9ob21lMiIgY2xhc3M9Im5vc2VsZWN0IG5hdi1saW5rIGFjdGl2ZSIgYXJpYS1jdXJyZW50PSJwYWdlIj5BY2N1ZWlsPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ibmF2LWl0ZW0gZHJvcGRvd24iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJuYXYtbGluayBkcm9wZG93bi10b2dnbGUiIGhyZWY9IiMiIGlkPSJuYXZiYXJEcm9wZG93biIgcm9sZT0iYnV0dG9uIiBkYXRhLWJzLXRvZ2dsZT0iZHJvcGRvd24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQSBwcm9wb3MNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPD89IGZpbGxNZW51TmF2KCJBYm91dCIpID8+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJuYXYtaXRlbSBkcm9wZG93biI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im5vc2VsZWN0IG5hdi1saW5rIGRyb3Bkb3duLXRvZ2dsZSIgaHJlZj0iIyIgaWQ9Im5hdmJhckRyb3Bkb3duIiByb2xlPSJidXR0b24iIGRhdGEtYnMtdG9nZ2xlPSJkcm9wZG93biIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBY3R1YWxpdMOpcw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Pz0gZmlsbE1lbnVOYXYoIk5ld3MiKSA/Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ibmF2LWl0ZW0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJub3NlbGVjdCBuYXYtbGluayIgaHJlZj0iY29udGFjdCI+Q29udGFjdDwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+DQogICAgICAgICAgICAgICAgICAgIDwvdWw+DQogICAgICAgICAgICAgICAgICAgIDw/cGhwIGlmICghc2Vzc2lvbigpLT5nZXQoJ2lzTG9nZ2VkSW4nKSkgOiA/Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBCb3V0b24gZGUgY29ubmV4aW9uIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0nL3VzZXIvbG9naW4nIGNsYXNzPSJub3NlbGVjdCBidG4gYnRuLXByaW1hcnkgYnRuLWxvZ2luIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgd2lkdGg9IjE2IiBoZWlnaHQ9IjE2IiBmaWxsPSJjdXJyZW50Q29sb3IiIGNsYXNzPSJiaSBiaS1ib3gtYXJyb3ctaW4tcmlnaHQiIHZpZXdCb3g9IjAgMCAxNiAxNiI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGZpbGwtcnVsZT0iZXZlbm9kZCIgZD0iTTYgMy41YS41LjUgMCAwIDEgLjUtLjVoOGEuNS41IDAgMCAxIC41LjV2OWEuNS41IDAgMCAxLS41LjVoLThhLjUuNSAwIDAgMS0uNS0uNXYtMmEuNS41IDAgMCAwLTEgMHYyQTEuNSAxLjUgMCAwIDAgNi41IDE0aDhhMS41IDEuNSAwIDAgMCAxLjUtMS41di05QTEuNSAxLjUgMCAwIDAgMTQuNSAyaC04QTEuNSAxLjUgMCAwIDAgNSAzLjV2MmEuNS41IDAgMCAwIDEgMHYtMnoiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3BhdGg+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGZpbGwtcnVsZT0iZXZlbm9kZCIgZD0iTTExLjg1NCA4LjM1NGEuNS41IDAgMCAwIDAtLjcwOGwtMy0zYS41LjUgMCAxIDAtLjcwOC43MDhMMTAuMjkzIDcuNUgxLjVhLjUuNSAwIDAgMCAwIDFoOC43OTNsLTIuMTQ3IDIuMTQ2YS41LjUgMCAwIDAgLjcwOC43MDhsMy0zeiI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcGF0aD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz4gU2UgQ29ubmVjdGVyDQogICAgICAgICAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICA8IS0tIE1lbnUgRHJvcCBkZSBkw6ljb25uZXhpb24gLS0+DQogICAgICAgICAgICAgICAgICAgIDw/cGhwIGVsc2UgOiA/Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibm9zZWxlY3QgZHJvcGRvd24gIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjIiBjbGFzcz0iZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciB0ZXh0LXdoaXRlIHRleHQtZGVjb3JhdGlvbi1ub25lIGRyb3Bkb3duLXRvZ2dsZSIgaWQ9ImRyb3Bkb3duVXNlcjEiIGRhdGEtYnMtdG9nZ2xlPSJkcm9wZG93biIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iPD89ICR1c2VyWydpbWFnZV91cmwnXSA/PiIgYWx0PSJNRiIgd2lkdGg9IjUwcHgiIGhlaWdodD0iNTBweCIgY2xhc3M9InJvdW5kZWQtY2lyY2xlLWZyYW1lIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImQtbm9uZSBkLXNtLWlubGluZSBteC0zIj48Pz0gJHVzZXJbJ25hbWUnXSAgPz48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0ibm9zZWxlY3QgZHJvcGRvd24tbWVudSBkcm9wZG93bi1tZW51IHRleHQtc21hbGwgc2hhZG93Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGNsYXNzPSJkcm9wZG93bi1pdGVtIiBocmVmPSIvdXNlci9wYXJhbWV0ZXJzIj5QYXJhbcOodHJlczwvYT48L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aHIgY2xhc3M9ImRyb3Bkb3duLWRpdmlkZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaWQ9ImJ0bl9ob21lMyIgY2xhc3M9ImRyb3Bkb3duLWl0ZW0iPlNlIGTDqWNvbm5lY3RlcjwvYT48L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPD9waHAgZW5kaWYgPz4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L25hdj4NCiAgICA8L2hlYWRlcj4NCiAgICA8c2VjdGlvbj4NCiAgICAgICAgPHNlY3Rpb24+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb250YWluZXItZmx1aWQiPg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyBmbGV4LW5vd3JhcCI+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1hdXRvIGNvbC1tZC0zIGNvbC14bC0yIHB4LXNtLTIgcHgtMCA8Pz0gZ2V0VGhlbWUoJHVzZXJbJ3R5cGUnXSwibmF2X2xlZnQiKSA/PiI+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkLWZsZXggZmxleC1jb2x1bW4gYWxpZ24taXRlbXMtY2VudGVyIGFsaWduLWl0ZW1zLXNtLXN0YXJ0IHB4LTMgcHQtMiB0ZXh0LXdoaXRlIG1pbi12aC0xMDAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gPGEgaHJlZj0iLyIgY2xhc3M9ImQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIgcGItMyBtYi1tZC0wIG1lLW1kLWF1dG8gdGV4dC13aGl0ZSB0ZXh0LWRlY29yYXRpb24tbm9uZSI+IC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmcy01IGQtbm9uZSBkLXNtLWlubGluZSByZWxpZWYgbWItMyI+QmllbnZlbnVlPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gPC9hPiAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSIgcGItNCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gPGEgaHJlZj0iIyIgY2xhc3M9ImQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIgdGV4dC13aGl0ZSB0ZXh0LWRlY29yYXRpb24tbm9uZSIgPiAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImQtbm9uZSBkLXNtLWlubGluZSAiPjw/PSAkdXNlclsnbmFtZSddID8+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZC1ub25lIGQtc20taW5saW5lICI+PD89ICR1c2VyWydmaXJzdG5hbWUnXSAgPz48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPjwvcD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+PHNtYWxsPjxpPiggPD89IGdldFR5cGVOYW1lKHNlc3Npb24oKS0+Z2V0KCd0eXBlJykpID8+ICk8L2k+PC9zbWFsbD48L3A+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJuYXYgbmF2LXBpbGxzIGZsZXgtY29sdW1uIG1iLXNtLWF1dG8gbWItMCBhbGlnbi1pdGVtcy1jZW50ZXIgYWxpZ24taXRlbXMtc20tc3RhcnQiIGlkPSJtZW51Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPD89IGZpbGxNZW51RGFzaEJvYXJkKCR1c2VyWyd0eXBlJ10pID8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aHI+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbCBweS0yIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDw/PSAkdGhpcy0+cmVuZGVyU2VjdGlvbigiY29udGVudCIpID8+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvc2VjdGlvbj4NCg0KICAgIDwvc2VjdGlvbj4NCiAgICA8IS0tIEZvb3RlciAtLT4NCiAgICA8Zm9vdGVyIGNsYXNzPSJub3NlbGVjdCA8Pz0gZ2V0VGhlbWUoJHVzZXJbJ3R5cGUnXSwiZm9vdGVyIikgPz4gdGV4dC1jZW50ZXIgdGV4dC13aGl0ZSI+DQogICAgICAgIDwhLS0gR3JpZCBjb250YWluZXIgLS0+DQogICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciBwLTQiPg0KICAgICAgICAgICAgPCEtLSBTZWN0aW9uOiBTb2NpYWwgbWVkaWEgLS0+DQogICAgICAgICAgICA8c2VjdGlvbiBjbGFzcz0ibWItNCI+DQogICAgICAgICAgICAgICAgPCEtLSBGYWNlYm9vayAtLT4NCiAgICAgICAgICAgICAgICA8YSBjbGFzcz0iYnRuIHctaC00MCBjaXJjbGUgYnRuLW91dGxpbmUtbGlnaHQgYnRuLWZsb2F0aW5nIG0tMSIgaHJlZj0iIyEiIHJvbGU9ImJ1dHRvbiI+PGkgY2xhc3M9ImZhIGZhLWZhY2Vib29rLWYiPjwvaT48L2E+DQoNCiAgICAgICAgICAgICAgICA8IS0tIFR3aXR0ZXIgLS0+DQogICAgICAgICAgICAgICAgPGEgY2xhc3M9ImJ0biB3LWgtNDAgY2lyY2xlIGJ0bi1vdXRsaW5lLWxpZ2h0IGJ0bi1mbG9hdGluZyBtLTEiIGhyZWY9IiMhIiByb2xlPSJidXR0b24iPjxpIGNsYXNzPSJmYSBmYS10d2l0dGVyIj48L2k+PC9hPg0KDQogICAgICAgICAgICAgICAgPCEtLSBHb29nbGUgLS0+DQogICAgICAgICAgICAgICAgPGEgY2xhc3M9ImJ0biB3LWgtNDAgY2lyY2xlIGJ0bi1vdXRsaW5lLWxpZ2h0IGJ0bi1mbG9hdGluZyBtLTEiIGhyZWY9IiMhIiByb2xlPSJidXR0b24iPjxpIGNsYXNzPSJmYSBmYS1nb29nbGUiPjwvaT48L2E+DQoNCiAgICAgICAgICAgICAgICA8IS0tIEluc3RhZ3JhbSAtLT4NCiAgICAgICAgICAgICAgICA8YSBjbGFzcz0iYnRuIHctaC00MCBjaXJjbGUgYnRuLW91dGxpbmUtbGlnaHQgYnRuLWZsb2F0aW5nIG0tMSIgaHJlZj0iIyEiIHJvbGU9ImJ1dHRvbiI+PGkgY2xhc3M9ImZhIGZhLWluc3RhZ3JhbSI+PC9pPjwvYT4NCg0KICAgICAgICAgICAgICAgIDwhLS0gTGlua2VkaW4gLS0+DQogICAgICAgICAgICAgICAgPGEgY2xhc3M9ImJ0biB3LWgtNDAgY2lyY2xlIGJ0bi1vdXRsaW5lLWxpZ2h0IGJ0bi1mbG9hdGluZyBtLTEiIGhyZWY9IiMhIiByb2xlPSJidXR0b24iPjxpIGNsYXNzPSJmYSBmYS1saW5rZWRpbiI+PC9pPjwvYT4NCg0KICAgICAgICAgICAgICAgIDwhLS0gR2l0aHViIC0tPg0KICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJidG4gdy1oLTQwIGNpcmNsZSBidG4tb3V0bGluZS1saWdodCBidG4tZmxvYXRpbmcgbS0xIiBocmVmPSIjISIgcm9sZT0iYnV0dG9uIj48aSBjbGFzcz0iZmEgZmEtZ2l0aHViIj48L2k+PC9hPg0KICAgICAgICAgICAgPC9zZWN0aW9uPg0KICAgICAgICAgICAgPCEtLSBTZWN0aW9uOiBTb2NpYWwgbWVkaWEgLS0+DQoNCiAgICAgICAgICAgIDwhLS0gU2VjdGlvbjogRm9ybSAtLT4NCiAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPSIiPg0KICAgICAgICAgICAgICAgIDxmb3JtIGFjdGlvbj0iIj4NCiAgICAgICAgICAgICAgICAgICAgPCEtLUdyaWQgcm93LS0+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyBkLWZsZXgganVzdGlmeS1jb250ZW50LWNlbnRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICA8IS0tR3JpZCBjb2x1bW4tLT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1hdXRvIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0icHQtMiI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdHJvbmc+UydhYm9ubmVyIMOgIGxhIGxldHRyZSBkJ2luZm9ybWF0aW9uczwvc3Ryb25nPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLUdyaWQgY29sdW1uLS0+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1HcmlkIGNvbHVtbi0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTUgY29sLTEyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIEVtYWlsIGlucHV0IC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tb3V0bGluZSBmb3JtLXdoaXRlIG1iLTQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iZW1haWwiIGlkPSJmb3JtNUV4YW1wbGUyMSIgY2xhc3M9ImZvcm0tY29udHJvbCIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJmb3JtLWxhYmVsIiBmb3I9ImZvcm01RXhhbXBsZTIxIj5BZHJlc3NlIG1haWw8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8IS0tR3JpZCBjb2x1bW4tLT4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLUdyaWQgY29sdW1uLS0+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtYXV0byI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBTdWJtaXQgYnV0dG9uIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBjbGFzcz0iYnRuIGJ0bi1vdXRsaW5lLWxpZ2h0IG1iLTQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTb3VzY3JpcmUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLUdyaWQgY29sdW1uLS0+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8IS0tR3JpZCByb3ctLT4NCiAgICAgICAgICAgICAgICA8L2Zvcm0+DQogICAgICAgICAgICA8L3NlY3Rpb24+DQogICAgICAgICAgICA8IS0tIFNlY3Rpb246IEZvcm0gLS0+DQoNCiAgICAgICAgICAgIDwhLS0gU2VjdGlvbjogVGV4dCAtLT4NCiAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPSJtYi00Ij4NCiAgICAgICAgICAgICAgICA8cD4NCiAgICAgICAgICAgICAgICAgICAgTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQgY29uc2VjdGV0dXIgYWRpcGlzaWNpbmcgZWxpdC4gU3VudCBkaXN0aW5jdGlvIGVhcnVtDQogICAgICAgICAgICAgICAgICAgIHJlcGVsbGF0IHF1YWVyYXQgdm9sdXB0YXRpYnVzIHBsYWNlYXQgbmFtLCBjb21tb2RpIG9wdGlvIHBhcmlhdHVyIGVzdCBxdWlhIG1hZ25hbQ0KICAgICAgICAgICAgICAgICAgICBldW0gaGFydW0gY29ycnVwdGkgZGljdGEsIGFsaXF1YW0gc2VxdWkgdm9sdXB0YXRlIHF1YXMuDQogICAgICAgICAgICAgICAgPC9wPg0KICAgICAgICAgICAgPC9zZWN0aW9uPg0KICAgICAgICAgICAgPCEtLSBTZWN0aW9uOiBUZXh0IC0tPg0KDQogICAgICAgICAgICA8IS0tIFNlY3Rpb246IExpbmtzIC0tPg0KICAgICAgICAgICAgPHNlY3Rpb24gY2xhc3M9IiI+DQogICAgICAgICAgICAgICAgPCEtLUdyaWQgcm93LS0+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4NCiAgICAgICAgICAgICAgICAgICAgPCEtLUdyaWQgY29sdW1uLS0+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1sZy0zIGNvbC1tZC02IG1iLTQgbWItbWQtMCI+DQogICAgICAgICAgICAgICAgICAgICAgICA8aDUgY2xhc3M9InRleHQtdXBwZXJjYXNlIj5BIHByb3BvczwvaDU+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0ibGlzdC11bnN0eWxlZCBtYi0wIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMhIiBjbGFzcz0idGV4dC13aGl0ZSI+Tm9zIGZvcm1hdGV1cnM8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMhIiBjbGFzcz0idGV4dC13aGl0ZSI+Tm9zIGZvcm1hdGlvbnM8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMhIiBjbGFzcz0idGV4dC13aGl0ZSI+Ri5BLlEuPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjISIgY2xhc3M9ImJ0biBidG4tb3V0bGluZS1saWdodCBtYi00Ij5NZSBGaW5hbmNlcjwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwhLS1HcmlkIGNvbHVtbi0tPg0KDQogICAgICAgICAgICAgICAgICAgIDwhLS1HcmlkIGNvbHVtbi0tPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbGctMyBjb2wtbWQtNiBtYi00IG1iLW1kLTAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGg1IGNsYXNzPSJ0ZXh0LXVwcGVyY2FzZSI+QWN0dWFsaXTDqXM8L2g1Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9Imxpc3QtdW5zdHlsZWQgbWItMCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjISIgY2xhc3M9InRleHQtd2hpdGUiPk5vcyBBcnRpY2xlczwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iIyEiIGNsYXNzPSJ0ZXh0LXdoaXRlIj5Ob3MgUHVibGljYXRpb25zPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjISIgY2xhc3M9InRleHQtd2hpdGUiPk5vcyBWaWTDqW9zPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjISIgY2xhc3M9InRleHQtd2hpdGUiPk5vcyBMaXZyZXM8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8IS0tR3JpZCBjb2x1bW4tLT4NCg0KICAgICAgICAgICAgICAgICAgICA8IS0tR3JpZCBjb2x1bW4tLT4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLWxnLTMgY29sLW1kLTYgbWItNCBtYi1tZC0wIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxoNSBjbGFzcz0idGV4dC11cHBlcmNhc2UiPk1vbiBlc3BhY2UgcGVyc29ubmVsPC9oNT4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJsaXN0LXVuc3R5bGVkIG1iLTAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iIyEiIGNsYXNzPSJ0ZXh0LXdoaXRlIj5Qcm9maWw8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwhLS1HcmlkIGNvbHVtbi0tPg0KICAgICAgICAgICAgICAgICAgICA8IS0tR3JpZCBjb2x1bW4tLT4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLWxnLTMgY29sLW1kLTYgbWItNCBtYi1tZC0wIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxoNSBjbGFzcz0idGV4dC11cHBlcmNhc2UiPk5vdXMgY29udGFjdGVyPC9oNT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0ibGlzdC11bnN0eWxlZCBtYi0wIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMhIiBjbGFzcz0idGV4dC13aGl0ZSI+NyBwcm9tZW5hZGUgUm9iZXJ0IExhZmZvbnQNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEzMDAyIE1hcnNlaWxsZSDigJMgRnJhbmNlDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iIyEiIGNsYXNzPSJ0ZXh0LXdoaXRlIj4rMzMgKDApNCA4NCAzNSAxMyAxMzwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iIyEiIGNsYXNzPSJ0ZXh0LXdoaXRlIj5tYS1mb3JtYXRpb25AZ21haWwuY29tPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjISIgY2xhc3M9ImJ0biBidG4tb3V0bGluZS1saWdodCBtYi00Ij5Db250YWN0ZXI8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8IS0tR3JpZCBjb2x1bW4tLT4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8IS0tR3JpZCByb3ctLT4NCiAgICAgICAgICAgIDwvc2VjdGlvbj4NCiAgICAgICAgICAgIDwhLS0gU2VjdGlvbjogTGlua3MgLS0+DQogICAgICAgIDwvZGl2Pg0KICAgICAgICA8IS0tIEdyaWQgY29udGFpbmVyIC0tPg0KDQogICAgICAgIDwhLS0gQ29weXJpZ2h0IC0tPg0KICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LWNlbnRlciBwLTMiIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMik7Ij4NCiAgICAgICAgICAgIDxwPjxhIGNsYXNzPSJ0ZXh0LXdoaXRlIiBocmVmPSJodHRwczovL21hZm9ybWF0aW9uLmNvbS8iPlRlcm1lcyBldCBjb25kaXRpb25zIGfDqW7DqXJhbGVzPC9hPg0KICAgICAgICAgICAgICAgICZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOzxhIGNsYXNzPSJ0ZXh0LXdoaXRlIiBocmVmPSJodHRwczovL21hZm9ybWF0aW9uLmNvbS8iPk1lbnRpb25zIGzDqWdhbGVzPC9hPjwvcD4NCiAgICAgICAgPC9kaXY+DQogICAgICAgIDwhLS0gQ29weXJpZ2h0IC0tPg0KICAgIDwvZm9vdGVyPg0KICAgIDwhLS0gRm9vdGVyIC0tPg0KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL0Bwb3BwZXJqcy9jb3JlQDIuOS4yL2Rpc3QvdW1kL3BvcHBlci5taW4uanMiIGludGVncml0eT0ic2hhMzg0LUlRc29MWGw1UElMRmhvc1ZOdWJxNUxDN1FiOURYZ0RBOWkrdFE4WmozaXdXQXdQdGdGVHhiSjhOVDRHTjFSOHAiIGNyb3Nzb3JpZ2luPSJhbm9ueW1vdXMiPg0KICAgIDwvc2NyaXB0Pg0KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2Jvb3RzdHJhcEA1LjAuMi9kaXN0L2pzL2Jvb3RzdHJhcC5taW4uanMiIGludGVncml0eT0ic2hhMzg0LWNWS0lQaEdXaUMyQWw0dStMV2d4ZktUUkljZnUwSlR4UitFUUR6L2JnbGRvRXlsNEgwelVGMFFLYnJKMEVjUUYiIGNyb3Nzb3JpZ2luPSJhbm9ueW1vdXMiPg0KICAgIDwvc2NyaXB0Pg0KICAgIDxzY3JpcHQ+DQogICAgICAgIGxldCBteU1vZGFsRXhpdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtb2RhbGV4aXQnKTsNCiAgICAgICAgbGV0IG1vZGFsID0gYm9vdHN0cmFwLk1vZGFsLmdldE9yQ3JlYXRlSW5zdGFuY2UobXlNb2RhbEV4aXQpOw0KICAgICAgICBsZXQgYnRuSG9tZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJidG5faG9tZSIpOw0KICAgICAgICBsZXQgYnRuSG9tZTIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYnRuX2hvbWUyIik7DQogICAgICAgIGxldCBidG5Ib21lMyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJidG5faG9tZTMiKTsNCg0KICAgICAgICBmdW5jdGlvbiBhZGRFeGl0RXZlbnQoYnRuKSB7DQogICAgICAgICAgICBidG4uYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLCAoKSA9PiB7DQogICAgICAgICAgICAgICAgbW9kYWwuc2hvdygpOw0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0NCg0KICAgICAgICBhZGRFeGl0RXZlbnQoYnRuSG9tZSk7DQogICAgICAgIGFkZEV4aXRFdmVudChidG5Ib21lMik7DQogICAgICAgIGFkZEV4aXRFdmVudChidG5Ib21lMyk7DQoNCg0KICAgICAgICBmdW5jdGlvbiBvbkV4aXQoKSB7DQogICAgICAgICAgICBzZXNzaW9uU3RvcmFnZS5jbGVhcigpOw0KICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSAiL3VzZXIvbG9nb3V0IjsNCg0KICAgICAgICB9DQogICAgPC9zY3JpcHQ+DQogICAgPD89ICR0aGlzLT5yZW5kZXJTZWN0aW9uKCJqcyIpID8+DQoNCjwvYm9keT4NCg0KPC9odG1sPiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9czo0MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBlbnVtcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBtZXRhZGF0YSI7YTowOnt9fQ==";